// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ParkingLot.Shared.Models;

namespace ParkingLot.Server.Data
{
    public partial class ParkingLotContext : DbContext
    {
        public ParkingLotContext()
        {
        }

        public ParkingLotContext(DbContextOptions<ParkingLotContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<CarBrand> CarBrands { get; set; }
        public virtual DbSet<CarType> CarTypes { get; set; }
        public virtual DbSet<Entry> Entries { get; set; }
        public virtual DbSet<Exit> Exits { get; set; }
        public virtual DbSet<Gate> Gates { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Car>(entity =>
            {
                entity.HasKey(e => e.IdCar)
                    .HasName("PK__Car__0FA780583504FB5D");

                entity.ToTable("Car");

                entity.Property(e => e.RegistrationNumber)
                    .IsRequired()
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCarBrandNavigation)
                    .WithMany(p => p.Cars)
                    .HasForeignKey(d => d.IdCarBrand)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Car__IdCarBrand__1BC821DD");

                entity.HasOne(d => d.IdCarTypeNavigation)
                    .WithMany(p => p.Cars)
                    .HasForeignKey(d => d.IdCarType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Car__IdCarType__1CBC4616");
            });

            modelBuilder.Entity<CarBrand>(entity =>
            {
                entity.HasKey(e => e.IdCarBrand)
                    .HasName("PK__CarBrand__58E2C52A0753EE71");

                entity.ToTable("CarBrand");

                entity.Property(e => e.BrandName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CarType>(entity =>
            {
                entity.HasKey(e => e.IdCarType)
                    .HasName("PK__CarType__16CCFD6774086327");

                entity.ToTable("CarType");

                entity.Property(e => e.TypeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Entry>(entity =>
            {
                entity.HasKey(e => e.IdEntry)
                    .HasName("PK__Entry__BD8CBC5D85F04CD0");

                entity.ToTable("Entry");

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.HasOne(d => d.IdCarNavigation)
                    .WithMany(p => p.Entries)
                    .HasForeignKey(d => d.IdCar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Entry__IdCar__208CD6FA");

                entity.HasOne(d => d.IdEntryGateNavigation)
                    .WithMany(p => p.Entries)
                    .HasForeignKey(d => d.IdEntryGate)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Entry__IdEntryGa__1F98B2C1");
            });

            modelBuilder.Entity<Exit>(entity =>
            {
                entity.HasKey(e => e.IdExit)
                    .HasName("PK__Exit__0E8DEBAD134C0B00");

                entity.ToTable("Exit");

                entity.Property(e => e.ExitDate).HasColumnType("datetime");

                entity.HasOne(d => d.IdCarNavigation)
                    .WithMany(p => p.Exits)
                    .HasForeignKey(d => d.IdCar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Exit__IdCar__245D67DE");

                entity.HasOne(d => d.IdExitGateNavigation)
                    .WithMany(p => p.Exits)
                    .HasForeignKey(d => d.IdExitGate)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Exit__IdExitGate__236943A5");
            });

            modelBuilder.Entity<Gate>(entity =>
            {
                entity.HasKey(e => e.IdGate)
                    .HasName("PK__Gate__9E8B1AFF8AC165E0");

                entity.ToTable("Gate");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}